name: Build and publish conda packages for Mac and Linux

on: workflow_dispatch

jobs:
  build-publish-conda:
    name: "Build and publish conda packages for ${{ matrix.os }} on Python ${{ matrix.python-version }}"
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        build_type: [Release]
        python-version: ["3.10"]
        include:
          - python-version: "3.10"
            numpy-version: "1.22"

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive

    - uses: conda-incubator/setup-miniconda@v2
      with:
        activate-environment: sofa-conda-ci-py${{ matrix.python-version }}
        auto-update-conda: true
        python-version: ${{ matrix.python-version }}
        miniforge-version: latest

    - name: Install conda environment
      shell: bash -l {0}
      run: |
        conda activate sofa-conda-ci-py${{ matrix.python-version }}
        conda install anaconda-client conda-build -c conda-forge
        conda config --set anaconda_upload no

    - name: Show conda config
      shell: bash -l {0}
      run: |
        conda info
        conda list
        conda config --show-sources
        conda config --show
        printenv | sort

    - name: Build & publish sofa conda package
      shell: bash -l {0}
      run: |
        conda activate sofa-conda-ci-py${{ matrix.python-version }}
        cd conda/recipes
        conda build sofa -c conda-forge --error-overlinking
        PKGS=`conda build sofa -c conda-forge --output`
        echo $PKGS
        anaconda -t ${{ secrets.ANACONDA_TOKEN }} upload -u sofa-framework -l main $PKGS --force

    - name: Build & publish sofa-python3 conda package
      shell: bash -l {0}
      run: |
        conda activate sofa-conda-ci-py${{ matrix.python-version }}
        cd conda/recipes
        conda build sofa-python3 --py ${{ matrix.python-version }} --numpy ${{ matrix.numpy-version }} -c conda-forge --error-overlinking
        PKGS=`conda build sofa-python3 --py ${{ matrix.python-version }} --numpy ${{ matrix.numpy-version }} -c conda-forge --output`
        echo $PKGS
        anaconda -t ${{ secrets.ANACONDA_TOKEN }} upload -u sofa-framework -l main $PKGS --force
        
    - name: Build & publish sofa-stlib conda package
      shell: bash -l {0}
      run: |
        conda activate sofa-conda-ci-py${{ matrix.python-version }}
        cd conda/recipes
        conda build sofa-stlib --py ${{ matrix.python-version }} --numpy ${{ matrix.numpy-version }} -c conda-forge --error-overlinking
        PKGS=`conda build sofa-stlib --py ${{ matrix.python-version }} --numpy ${{ matrix.numpy-version }} -c conda-forge --output`
        echo $PKGS
        anaconda -t ${{ secrets.ANACONDA_TOKEN }} upload -u sofa-framework -l main $PKGS --force

    - name: Build & publish sofa-beamadapter conda package
      shell: bash -l {0}
      run: |
        conda activate sofa-conda-ci-py${{ matrix.python-version }}
        cd conda/recipes
        conda build sofa-beamadapter --py ${{ matrix.python-version }} --numpy ${{ matrix.numpy-version }} -c conda-forge --error-overlinking
        PKGS=`conda build sofa-beamadapter --py ${{ matrix.python-version }} --numpy ${{ matrix.numpy-version }} -c conda-forge --output`
        echo $PKGS
        anaconda -t ${{ secrets.ANACONDA_TOKEN }} upload -u sofa-framework -l main $PKGS --force

    - name: Build & publish sofa-modelorderreduction conda package
      shell: bash -l {0}
      run: |
        conda activate sofa-conda-ci-py${{ matrix.python-version }}
        cd conda/recipes
        conda build sofa-modelorderreduction --py ${{ matrix.python-version }} --numpy ${{ matrix.numpy-version }} -c conda-forge --error-overlinking
        PKGS=`conda build sofa-modelorderreduction --py ${{ matrix.python-version }} --numpy ${{ matrix.numpy-version }} -c conda-forge --output`
        echo $PKGS
        anaconda -t ${{ secrets.ANACONDA_TOKEN }} upload -u sofa-framework -l main $PKGS --force

    - name: Build & publish sofa-softrobots conda package
      shell: bash -l {0}
      run: |
        conda activate sofa-conda-ci-py${{ matrix.python-version }}
        cd conda/recipes
        conda build sofa-softrobots --py ${{ matrix.python-version }} --numpy ${{ matrix.numpy-version }} -c conda-forge --error-overlinking
        PKGS=`conda build sofa-softrobots --py ${{ matrix.python-version }} --numpy ${{ matrix.numpy-version }} -c conda-forge --output`
        echo $PKGS
        anaconda -t ${{ secrets.ANACONDA_TOKEN }} upload -u sofa-framework -l main $PKGS --force

    - name: Build & publish sofa-cosserat conda package
      shell: bash -l {0}
      run: |
        conda activate sofa-conda-ci-py${{ matrix.python-version }}
        cd conda/recipes
        conda build sofa-cosserat --py ${{ matrix.python-version }} --numpy ${{ matrix.numpy-version }} -c conda-forge --error-overlinking
        PKGS=`conda build sofa-cosserat --py ${{ matrix.python-version }} --numpy ${{ matrix.numpy-version }} -c conda-forge --output`
        echo $PKGS
        anaconda -t ${{ secrets.ANACONDA_TOKEN }} upload -u sofa-framework -l main $PKGS --force